# -*- coding: utf-8 -*-
"""Project: Sicherman's da man

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1D0zZEFVHL17OqCYHNs62aT7fbN-1v2q-
"""

#include <iostream>
#include <iomanip>  // For table formatting
#include <cstdlib>  // For rand() and srand()

using namespace std;

int main() {
   int seed;
   cout << "Enter a seed value : ";
   cin >> seed;

   srand(seed);  // Seed the random number generator with srand()

   int smallCubeValues[] = {2,3,3,4,4,5};
   int largeCubeValues[] = {0,2,3,4,5,7};

   //Roll 1:
   int smallRoll1 = rand() % 6 + 1;
   int largeRoll1 = rand() % 6 + 1;
   int smallValue1 = smallCubeValues[smallRoll1 -1];
   int largeValue1 = largeCubeValues[largeRoll1 - 1];
   int total1 = smallValue1 + largeValue1;

   //Roll 2:
   int smallRoll2 = rand() % 6 + 1;
   int largeRoll2 = rand() % 6 + 1;
   int smallValue2 = smallCubeValues[smallRoll2 - 1];
   int largeValue2 = largeCubeValues[largeRoll2 - 1];
   int total2 = smallValue2 + largeValue2;

   //Roll 3:
   int smallRoll3 = rand() % 6 + 1;
   int largeRoll3 = rand() % 6 + 1;
   int smallValue3 = smallCubeValues[smallRoll3 - 1];
   int largeValue3 = largeCubeValues[largeRoll3 - 1];
   int total3 = smallValue3 + largeValue3;

   //Roll 4:
   int smallRoll4 = rand() % 6 + 1;
   int largeRoll4 = rand() % 6 + 1;
   int smallValue4 = smallCubeValues[smallRoll4 - 1];
   int largeValue4 = largeCubeValues[largeRoll4 - 1];
   int total4 = smallValue4 + largeValue4;

   //Roll 5:
   int smallRoll5 = rand() % 6 + 1;
   int largeRoll5 = rand() % 6 + 1;
   int smallValue5 = smallCubeValues[smallRoll5 - 1];
   int largeValue5 = largeCubeValues[largeRoll5 - 1];
   int total5 = smallValue5 + largeValue5;

   //Roll 6:
   int smallRoll6 = rand() % 6 + 1;
   int largeRoll6 = rand() % 6 + 1;
   int smallValue6 = smallCubeValues[smallRoll6 - 1];
   int largeValue6 = largeCubeValues[largeRoll6 - 1];
   int total6 = smallValue6 + largeValue6;

   //Roll 7:
   int smallRoll7 = rand() % 6 + 1;
   int largeRoll7 = rand() % 6 + 1;
   int smallValue7 = smallCubeValues[smallRoll7 - 1];
   int largeValue7 = largeCubeValues[largeRoll7 - 1];
   int total7 = smallValue7 + largeValue7;



   // 3) Simulate seven rolls of the dice
   cout << "Roll#|Small|Large|Total\n";
   cout << "-----|-----|-----|-----\n";


      // Display each roll result
   cout << setw(3) <<1 << "  |" << setw(5) << smallValue1 << "| " << setw(4) << largeValue1 << "|" << setw(5) << total1 << endl;
   cout << setw(3) <<2 << "  |" << setw(5) << smallValue2 << "| " << setw(4) << largeValue2 << "|" << setw(5) << total2 << endl;
   cout << setw(3) <<3 << "  |" << setw(5) << smallValue3 << "| " << setw(4) << largeValue3 << "|" << setw(5) << total3 << endl;
   cout << setw(3) <<4 << "  |" << setw(5) << smallValue4 << "| " << setw(4) << largeValue4 << "|" << setw(5) << total4 << endl;
   cout << setw(3) <<5 << "  |" << setw(5) << smallValue5 << "| " << setw(4) << largeValue5 << "|" << setw(5) << total5 << endl;
   cout << setw(3) <<6 << "  |" << setw(5) << smallValue6 << "| " << setw(4) << largeValue6 << "|" << setw(5) << total6 << endl;
   cout << setw(3) <<7 << "  |" << setw(5) << smallValue7 << "| " << setw(4) << largeValue7 << "|" << setw(5) << total7 << endl;

   return 0;
}
